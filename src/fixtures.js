import img_01 from './img/articles/01.jpg';
import img_02 from './img/articles/02.jpg';
import img_03 from './img/articles/03.jpg';
import img_04 from './img/articles/04.jpg';
import img_05 from './img/articles/05.jpg';
import img_06 from './img/articles/06.jpg';
import img_07 from './img/articles/07.jpg';
import img_08 from './img/articles/08.jpg';
import img_09 from './img/articles/09.jpg';
import img_10 from './img/articles/10.jpg';
import img_11 from './img/articles/11.jpg';
import img_12 from './img/articles/12.jpg';
import img_13 from './img/articles/13.jpg';
import img_14 from './img/articles/14.jpg';
import img_15 from './img/articles/15.jpg';
import img_16 from './img/articles/16.jpg';
import img_17 from './img/articles/17.jpg';
import img_18 from './img/articles/18.jpg';
import img_19 from './img/articles/19.jpg';

export default [
    {
        id: 'trisvcqqjt',
        img: img_01,
        title: 'setState Machine',
        description: 'What if your components state was deterministic? Learn about implementation of State Machines to manage React Components state - from the basics of the Automata theory to autogenerated tests.',
        date: new Date(2018, 3, 1),
        price: 'Free',
        time: '13:00 - 14:00'
    },
    {
        id: 'gvgystuiqu',
        img: img_02,
        title: 'Imperative is the new black',
        description: 'One of the benefits of React is its declarative interface and the fact that you can describe any advanced UI pattern with a set of components to have a predictable behavior. That is, completely different from what we have used to be doing - when writing imperative code. In fact, imperative itself is often blamed on Twitter for being highly dangerous and an anti-pattern. In this talk, we will explore different ways of building reusable libraries with React Native (like APIs and higher order components). We will see that imperative code is actually there at low-level and is what makes communication with native world possible.',

        date: new Date(2017, 4, 1),
        price: 'Free',
        time: '13:00 - 14:00'
    },
    {
        id: 'zplqywfgjj',
        img: img_03,
        title: 'Mixed Mode React',
        description: 'This talk will focus on the creative exploitation of React component architecture to render not only to DOM elements, but other targets as well, at the same time. We will explore techniques you can use to achieve this, common pitfalls, useful applications of these patterns and not so useful, but wildly entertaining applications of these patterns.',

        date: new Date(2017, 5, 1),
        price: 'Free',
        time: '13:00 - 14:00'
    },
    {
        id: 'rofzkzxeom',
        img: img_04,
        title: 'There and back again: grokking state and data',
        description: 'Many teams have been discussing on whether to go the immutable or mutable state route. Flux or MVC or MVVM? Redux, MobX or Apollo? Instead of answering the question, in this talk we will look at JavaScript code on a more fundamental level: How do data structures work in JavaScript. What assumptions can be we make if we treat them to be immutable? Or mutable? How can we express concepts like identities, references, collections, mutations, derivations in either case? And can we bent the rules between the two? This talk will provide you a deeper understanding of the difference between state and data. A deeper understanding of JavaScript itself. Which will help you to improve the state you manage, regardless of the library you use to implement that.',

        date: new Date(2018, 3, 1),
        price: 'Free',
        time: '13:00 - 14:00'
    },
    {
        id: 'vftqqqjhfl',
        img: img_05,
        title: 'Cross-Language React',
        description: 'React as an idea and a paradigm is interesting in its own right, and should not be tethered to its JavaScript roots. Ever consider whether or not React would be possible in other languages? Other platforms? What are the pros and cons of doing so? If we had React in multiple languages, would it make sense to change the architecture of React Native?',

        date: new Date(2017, 4, 1),
        price: 'Free',
        time: '13:00 - 14:00'
    },
    {
        id: 'wdaipqwaif',
        img: img_06,
        title: 'D3 and React, Together',
        description: 'D3 and React, who should control the DOM? After all, React’s whole purpose is managing updates to the DOM so we don’t have to. D3, on the other hand, is a library for building data visualizations, and it too needs access to the DOM. And stepping back, when should we even use D3 and React together? In this talk, I will give guidelines on when React should have ownership of the DOM, and when D3 should instead. More importantly, I will cover the interactions and applications that will benefit the most from using D3 and React, together.',

        date: new Date(2018, 3, 1),
        price: 'Free',
        time: '13:00 - 14:00'
    },
    {
        id: 'avkzhmkvtg',
        img: img_07,
        title: 'React Navigation',
        description: 'You start using React Native. Styling? Got it. Animations? A little different, but sure. Now lets add a navigation bar and another screen that we transition to... This is where you hit a fork in the road. You can either use a library that wraps the native navigation APIs for the platform or a re-implementation of those APIs using the same React Native primitives (View, Text, Animated, etc) that you use throughout your app. The former is commonly called native navigation because most of the implementation is in "native" and the latter is called JavaScript-based navigation because most of the implementation is in JavaScript. React Navigation is a JavaScript-based navigation solution and React Native Navigation is a native navigation library. The choice you make has a significant impact on your app, and its something you will live with every day while you continue to work on the project. I lead the React Navigation along with the creator of the project, Eric Vicenti. Ill explain why we think that building a JavaScript-based navigation library is important, what the limitations are (why there is room for both categories of solutions), and Ill show you how to take full advantage of it.',

        date: new Date(2017, 4, 1),
        price: 'Free',
        time: '13:00 - 14:00'
    },
    {
        id: 'atjtorwvvq',
        img: img_08,
        title: 'Making Packages for People',
        description: 'In this talk we’ll discuss the design philosophy of Elm by doing a comparative analysis between architecture and software development, to understand not only how to get started with Elm, but also why.',

        date: new Date(2018, 3, 1),
        price: 'Free',
        time: '13:00 - 14:00'
    },
    {
        id: 'gfukwdeqgu',
        img: img_09,
        title: 'GraphQL at scale with AWS',
        description: 'As the popularity of GraphQL grows, many hard questions are being asked by companies adopting it as an API standard. What databases or search engines can I use it with? How do you aggregate data from multiple sources globally? Can GraphQL fetched data be available offline, and if clients mutate it how are conflicts resolved? Is there a secure way to control data access based on user authentication? Do subscriptions scale to thousands or millions of users? How do I use it with content like images or video? We’ll learn about AWS AppSync, a managed GraphQL service with offline and realtime features, and see the latest features and functionality that have just been released to market.',

        date: new Date(2016, 5, 1),
        price: 'Free',
        time: '13:00 - 14:00'
    },
    {
        id: 'kovgtjxnfs',
        img: img_10,
        title: 'React State Management In a GraphQL Era',
        description: 'Now that GraphQL takes care of managing data in our apps, is an external state-management library even needed? Lets explore all the possibilities and compare the combinations of React, Apollo, Redux, MobX, and Next.js.',

        date: new Date(2018, 5, 1),
        price: 'Free',
        time: '13:00 - 14:00'
    },
    {
        id: 'xsfxzaukyl',
        img: img_11,
        title: 'Network Layer in React Native',
        description: 'React Native provides us with a set of primitives for building mobile applications. A few of these can be aggregated into a "networking" layer that manages the transfer of data. This layer was designed to mimic an API we have in the Web, but despite all the similarities, it has its own *qualities* and caveats every good React Native developer should know about. In this talk Ill try to guide you through the networking layer in React Native and share some tips and tricks Ive learned along the way.',

        date: new Date(2018, 3, 1),
        price: 'Free',
        time: '13:00 - 14:00'
    },
    {
        id: 'yslvuhdocf',
        img: img_12,
        title: 'Reactive Programming Demystified: Drink the Kool-Aid',
        description: 'There will always be a new JavaScript framework to learn. Technology will continue to evolve and change, and developers will continue to rewrite applications. Wouldnt it be amazing if we could just copy paste 90% of our code from framework to framework? Well, you can. Reactive programming enables just this AND the ability to future proof your code. Not only can reactive programming help with your solutions to JavaScript fatigue, but the concepts and technology remain consistent from framework to framework. Learn how to create a more composable application architecture and an arsenal of lego bricks with RxJS, a push based primitive and domain specific language that sits on top of JavaScript.',

        date: new Date(2017, 4, 1),
        price: 'Free',
        time: '13:00 - 14:00'
    },
    {
        id: 'ocqfuiylas',
        img: img_13,
        title: 'Structure Your Apps Story With Sagas and Selectors',
        description: 'As apps begin to scale, many developers find themselves asking the question - but where does all the hard stuff go? The complicated data manipulation, the validation, the process flow of our apps. In other words, the business logic. If React is designed for the view layer, and we’re using Redux or something similar for the state, then where does the business logic go? This talk looks at the different options and tries to answer that question.',

        date: new Date(2016, 5, 1),
        price: 'Free',
        time: '13:00 - 14:00'
    },
    {
        id: 'tepbbbvppq',
        img: img_14,
        title: 'Push Notification With React Native',
        description: 'Push notification is a crucial feature for any app. It helps in engagement and retention of the user. Most users will not return to an app after installing it, and that is where push notifications come into play. In my talk Ill be talking about how to achieve this feature with React Native for both iOS and Android.',

        date: new Date(2018, 5, 1),
        price: 'Free',
        time: '13:00 - 14:00'
    },
    {
        id: 'xqatfwmmuq',
        img: img_15,
        title: 'Controlling Smart Homes With React Native',
        description: 'Smart homes become more and more popular. With this we still use applications that come with smart products to control them. In this talk I will show you an alternative how you can create your own apps with React Native, that control smart home appliances.',

        date: new Date(2017, 4, 1),
        price: 'Free',
        time: '13:00 - 14:00'
    },
    {
        id: 'ovpprksicw',
        img: img_16,
        title: 'React Native VR + AR Made Simple',
        description: 'The React ecosystem has given developers the opportunity to target platforms that were once thought out of reach for JavaScript developers. Now, the Viro platform opens the door to developing both AR & VR on both iOS & Android as well as GEAR VR and Google Daydream. In this talk, I will quickly go over how to get up and running with the framework and demo an app that allows user to upload images from the conference into a virtual room, as well as walk around and interact with them in Augmented Reality.',

        date: new Date(2017, 5, 1),
        price: 'Free',
        time: '13:00 - 14:00'
    },
    {
        id: 'vignilxbzu',
        img: img_17,
        title: 'How to “Reactify” Your Existing UI Components',
        description: 'React is a component-based UI library that doesn’t provide any built-in components. Over the years companies and developers have invested a lot of time and money in development of UI components based on VanillaJS or various frameworks. Building components is time consuming, has integration and maintenance risks, and worst of all, distracts developers from the task at hand - actually building the application. In this presentation, you will learn how to quickly and easily “Reactify” your existing JavaScript components to use them in React applications.',

        date: new Date(2016, 5, 1),
        price: 'Free',
        time: '13:00 - 14:00'
    },
    {
        id: 'ufdiasyqlp',
        img: img_18,
        title: 'Rethinking With React 16',
        description: 'React v16.0 comes with some major changes and an update to the core algorithm. With React v16.0 Facebook has completely revised the internals of React while keeping the public API essentially the same. Learn about what’s new in React 16 which would include a brief explanation of the new algorithm along with focus on few of the new features like Error Boundaries, Portals, Fragments and SSR with React 16.',

        date: new Date(2017, 4, 1),
        price: 'Free',
        time: '13:00 - 14:00'
    },
    {
        id: 'cdcagowqbr',
        img: img_19,
        title: 'Continuous Workflow for a Large React Native App: Mobile At Wix',
        description: 'The Wix app is a large operation involving ~40 developers from 6 different product groups and a pretty big amount of features. Scaling this project requires code architecture that enables each module to be developed separately, but easily fit the big puzzle. We’ll discuss the way we do both unit and E2E testing, the way we scale our CI, the way we deploy and how we fix issues in production when they arise. We’ll also share our plans to how we’re going to scale our app and dev process to support 100 developers a year from today.',

        date: new Date(2017, 5, 1),
        price: 'Free',
        time: '13:00 - 14:00'
    },
]
